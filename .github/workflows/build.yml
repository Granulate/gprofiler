name: Build and test gprofiler distributions

on:
  pull_request:
  push:
    tags:
      - '**'

jobs:
  build-docker:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Get and verify tag value
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          ./cmp_tags.sh
          echo "GH_REPO=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.GH_REPO }}:latest,${{ env.GH_REPO }}:${{ env.RELEASE_VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  build-executable:
   runs-on: ubuntu-20.04
   steps:
     - name: Checkout Code
       uses: actions/checkout@v2
     - name: Get and verify tag value
       run: |
         echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
         ./cmp_tags.sh
     - name: Run Pyinstaller
       run: DOCKER_BUILDKIT=1 docker build -f - --output type=local,dest=dist/ . < pyi.Dockerfile
     - name: Upload the executable as job artifact
       uses: actions/upload-artifact@v2
       with:
         name: gprofiler
         path: dist/
         retention-days: 1

  test-executable:
    needs: build-executable
    strategy:
      fail-fast: false
      matrix:
        # add ubuntu 14.04 and alpine, when they will be ready
        containers: [ 'ubuntu:16.04', 'ubuntu:18.04',
                      'ubuntu:20.04', 'ubuntu:20.10', 'centos:7', 'centos:8', 'debian:8',
                      'debian:9', 'debian:10' ]
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.275'
          java-package: jdk
          architecture: x64

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download the executable from previous job
        uses: actions/download-artifact@v2
        with:
          name: gprofiler
          path: dist/

      - name: Install dependencies
        run: |
          sudo env "PATH=$PATH" python -m pip install --upgrade pip
          sudo env "PATH=$PATH" pip install -r dev-requirements.txt
          sudo env "PATH=$PATH" pip install -r requirements.txt
          sudo chmod +x dist/gprofiler

      - name: run gprofiler tests on compiled executable
        run: sudo env "PATH=$PATH" python -m pytest --exec-container-image ${{ matrix.containers }} --executable dist/gprofiler -v tests/test_executable.py


  deploy-executable:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test-executable
    runs-on: ubuntu-20.04

    steps:
      - name: Download the executable from previous job
        uses: actions/download-artifact@v2
        with:
          name: gprofiler
          path: dist/
      - name: Get tag value
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/gprofiler
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
