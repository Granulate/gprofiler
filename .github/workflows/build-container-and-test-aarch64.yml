name: Lint, build gProfiler container and run tests on aarch64

on: pull_request

jobs:
  build-container-aarch64:
    runs-on:
      - self-hosted
      - public
      - ARM64

    steps:
    - name: remove incorrect pycache permissions
      run: sudo chown -R ${USER} /home/ubuntu/actions-runner/_work/gprofiler/gprofiler

    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # the tests need the gprofiler image built (from Dockerfile). I run it separately here, because "docker build" prints the build logs
    # more nicely. the tests will then be able to use the built image.
    - name: Build gProfiler image
      run: ./scripts/build_aarch64_container.sh --output type=docker -t gprofiler 

    - name: Export gProfiler image
      run: mkdir -p output && docker image save gprofiler > output/gprofiler.img

    - name: Upload the image artifact
      uses: actions/upload-artifact@v2
      with:
        name: gprofiler.img
        path: output/
        retention-days: 1

  test:
    needs: build-container-aarch64

    runs-on: 
      - self-hosted
      - public
      - ARM64
    steps:
  
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Download the executable from previous job
      uses: actions/download-artifact@v2
      with:
        name: gprofiler.img
        path: output/

    # used for next step (Copy resources ...) and also used in the tests themselves.
    - name: Import gProfiler image
      run: docker image load < output/gprofiler.img

    - name: Copy resources from gProfiler image
      run: ./scripts/copy_resources_from_image.sh gprofiler

    # TODO: Add docker layer caching when GitHub Actions cache is stabilized and works good with "satackey/action-docker-layer-caching@v0.0.11"
    - name: Run gProfiler tests
      run: sudo ./tests/test.sh --ignore=tests/test_executable.py
